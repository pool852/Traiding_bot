import os
from openai import OpenAI
from dotenv import load_dotenv
import logging
import asyncio

load_dotenv()

client = OpenAI(
    api_key=os.getenv("TOGETHER_API_KEY"),
    base_url="https://api.together.xyz/v1"
)

# –û—á–µ—Ä–µ–¥—å –∏ –≤–æ—Ä–∫–µ—Ä –¥–ª—è Together AI
_together_queue = asyncio.Queue()
TOGETHER_RATE_LIMIT = 1  # 1 –∑–∞–ø—Ä–æ—Å –≤ —Å–µ–∫—É–Ω–¥—É

async def together_worker():
    while True:
        func, args, kwargs, future = await _together_queue.get()
        try:
            result = await func(*args, **kwargs)
            future.set_result(result)
        except Exception as e:
            future.set_exception(e)
        await asyncio.sleep(1 / TOGETHER_RATE_LIMIT)

asyncio.get_event_loop().create_task(together_worker())

async def together_request(func, *args, **kwargs):
    loop = asyncio.get_event_loop()
    future = loop.create_future()
    await _together_queue.put((func, args, kwargs, future))
    return await future


def translate_timeframe(tf: str) -> str:
    return {
        "15m": "15 –º–∏–Ω—É—Ç",
        "1h": "1 —á–∞—Å",
        "4h": "4 —á–∞—Å–∞",
        "1d": "1 –¥–µ–Ω—å"
    }.get(tf, tf)


async def generate_explanation(indicators: dict, timeframe: str, symbol: str = "BTCUSDT") -> str:
    readable_tf = translate_timeframe(timeframe)

    prompt = f"""
–¢—ã ‚Äî –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫. –°–æ—Å—Ç–∞–≤—å –∫—Ä–∞—Ç–∫–∏–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±–∑–æ—Ä –¥–ª—è —Ç—Ä–µ–π–¥–µ—Ä–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–±–ª–æ–Ω—É:

1. –®–∞–ø–∫–∞:
üìä {symbol} ‚Äî {readable_tf}
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: <recommendation>
‚Ä¢ Seven days: <SevenDays>
‚Ä¢ –ò—Ç–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª: <final_signal>
‚Ä¢ RSI: <RSI>
‚Ä¢ MACD: <MACD>
‚Ä¢ Stoch RSI: <StochRSI>
‚Ä¢ EMA(9/20/50): <EMA9> / <EMA20> / <EMA50>
‚Ä¢ MA Summary: <MA_summary> (<MA_buy> Buy / <MA_sell> Sell)
‚Ä¢ –°–≤–µ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã: <candles>
‚Ä¢ –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–Ω–¥: <trend>

2. –ü–æ—Å–ª–µ –±–ª–æ–∫–∞ —Å –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤—å –∫—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π (–ö—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥: ...), 1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É, —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç—å/—Å–∏–ª—É —Å–∏–≥–Ω–∞–ª–∞, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å.

–ü—Ä–∏–º–µ—Ä:
üìä BTCUSDT ‚Äî 15 –º–∏–Ω—É—Ç
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: SELL
‚Ä¢ Seven days: HOLD
‚Ä¢ –ò—Ç–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª: HOLD
‚Ä¢ RSI: 33.23
‚Ä¢ MACD: -246.14
‚Ä¢ Stoch RSI: 50.21
‚Ä¢ EMA(9/20/50): –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö / 116973.14 / 117693.61
‚Ä¢ MA Summary: STRONG_SELL (0 Buy / 14 Sell)
‚Ä¢ –°–≤–µ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã: ‚Äî
‚Ä¢ –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–Ω–¥: üìâ –ú–µ–¥–≤–µ–∂–∏–π

–ö—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥: –ù–µ—Ç —è–≤–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞, —Ä—ã–Ω–æ–∫ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏.

–¢–∞–π–º—Ñ—Ä–µ–π–º: {readable_tf}

–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã:
- –ò—Ç–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª: {indicators.get('final_signal')}
- Seven days: {indicators.get('SevenDays')}
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {indicators.get('recommendation')}
- RSI: {indicators.get('RSI')}
- MACD: {indicators.get('MACD')}
- Stoch RSI: {indicators.get('StochRSI')}
- EMA(9): {indicators.get('EMA9')}
- EMA(20): {indicators.get('EMA20')}
- EMA(50): {indicators.get('EMA50')}
- MA Summary: {indicators.get('MA_summary')} (–ü–æ–∫—É–ø–∫–∞: {indicators.get('MA_buy')}, –ü—Ä–æ–¥–∞–∂–∞: {indicators.get('MA_sell')})
- –°–≤–µ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã: {indicators.get('candles')}
- –¢—Ä–µ–Ω–¥: {indicators.get('trend')}
"""

    try:
        response = await asyncio.get_event_loop().run_in_executor(
            None,
            lambda: client.chat.completions.create(
                model="mistralai/Mixtral-8x7B-Instruct-v0.1",
                messages=[
                    {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏–∑—É. –°—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É–π —à–∞–±–ª–æ–Ω—É –∏–∑ –ø—Ä–∏–º–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ—Å–ª–µ –±–ª–æ–∫–∞ —Å –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –≤—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–π –∫—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π (–ö—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥: ...). –ù–µ –¥–æ–±–∞–≤–ª—è–π –ª–∏—à–Ω–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π. –ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –ø–æ –æ–¥–Ω–æ–º—É —Ç–∞–π–º—Ñ—Ä–µ–π–º—É, –Ω–µ –¥–æ–±–∞–≤–ª—è–π –±–ª–æ–∫–∏ –ø–æ –¥—Ä—É–≥–∏–º —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º. –ü–∏—à–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º."},
                    {"role": "user", "content": prompt.strip()}
                ],
                temperature=0.5,
                max_tokens=600
            )
        )
        content = response.choices[0].message.content
        return content.strip() if content else "‚ö†Ô∏è –û—Ç–≤–µ—Ç –æ—Ç –ò–ò –ø—É—Å—Ç–æ–π."

    except Exception as e:
        logging.exception(f"[TOGETHER AI] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—è—Å–Ω–µ–Ω–∏—è: {e}")
        return f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—è—Å–Ω–µ–Ω–∏–µ –æ—Ç –ò–ò (Together AI): {str(e)}"


async def generate_short_comment(indicators: dict, timeframe: str, symbol: str = "BTCUSDT") -> str:
    readable_tf = translate_timeframe(timeframe)
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Ç–∫–∏–π prompt —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã–≤–æ–¥–∞
    prompt = f"""
–ù–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –¥–ª—è {symbol} –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ {readable_tf} –¥–∞–π –∫—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥ (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) –¥–ª—è —Ç—Ä–µ–π–¥–µ—Ä–∞. –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏, –Ω–µ –ø–∏—à–∏ —à–∞–ø–∫—É, —Ç–æ–ª—å–∫–æ –≤—ã–≤–æ–¥. –ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –Ω–µ –≤—Å—Ç–∞–≤–ª—è–π –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã. –ï—Å–ª–∏ –≤ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞—Ö –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏ –∏—Ö –Ω–∞ —Ä—É—Å—Å–∫–∏–π.

–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã:
- –ò—Ç–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª: {indicators.get('final_signal')}
- Seven days: {indicators.get('SevenDays')}
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {indicators.get('recommendation')}
- RSI: {indicators.get('RSI')}
- MACD: {indicators.get('MACD')}
- Stoch RSI: {indicators.get('StochRSI')}
- EMA(9): {indicators.get('EMA9')}
- EMA(20): {indicators.get('EMA20')}
- EMA(50): {indicators.get('EMA50')}
- –û–±—ä—ë–º: {indicators.get('volume')}
- –¢—Ä–µ–Ω–¥: {indicators.get('trend')}
"""
    try:
        response = await asyncio.get_event_loop().run_in_executor(
            None,
            lambda: client.chat.completions.create(
                model="mistralai/Mixtral-8x7B-Instruct-v0.1",
                messages=[
                    {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏–∑—É. –î–∞–π —Ç–æ–ª—å–∫–æ –∫—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥ –ø–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏, –Ω–µ –ø–∏—à–∏ —à–∞–ø–∫—É, —Ç–æ–ª—å–∫–æ –≤—ã–≤–æ–¥. –ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –Ω–µ –≤—Å—Ç–∞–≤–ª—è–π –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞, –¥–∞–∂–µ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–∞—Ö."},
                    {"role": "user", "content": prompt.strip()}
                ],
                temperature=0.5,
                max_tokens=200
            )
        )
        content = response.choices[0].message.content
        return content.strip() if content else "‚Äî"
    except Exception as e:
        logging.exception(f"[TOGETHER AI] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—Ä–∞—Ç–∫–æ–≥–æ –≤—ã–≤–æ–¥–∞: {e}")
        return "‚Äî"


async def generate_direction_and_probability(indicators: dict, timeframe: str, symbol: str = "BTCUSDT") -> str:
    readable_tf = translate_timeframe(timeframe)
    prompt = f"""
–ù–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –¥–ª—è {symbol} –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ {readable_tf} –æ—Ü–µ–Ω–∏, –∫—É–¥–∞ —Å –±–æ–ª—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø–æ–π–¥—ë—Ç —Ü–µ–Ω–∞ (—Ç–æ–ª—å–∫–æ –õ–û–ù–ì –∏–ª–∏ –®–û–†–¢) –∏ —É–∫–∞–∂–∏ –ø—Ä–æ—Ü–µ–Ω—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –õ–û–ù–ì 68%). –ù–µ –¥–æ–±–∞–≤–ª—è–π –¥—Ä—É–≥–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π, —Ç–æ–ª—å–∫–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ü–µ–Ω—Ç.

–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã:
- –ò—Ç–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª: {indicators.get('final_signal')}
- Seven days: {indicators.get('SevenDays')}
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {indicators.get('recommendation')}
- RSI: {indicators.get('RSI')}
- MACD: {indicators.get('MACD')}
- Stoch RSI: {indicators.get('StochRSI')}
- EMA(9): {indicators.get('EMA9')}
- EMA(20): {indicators.get('EMA20')}
- EMA(50): {indicators.get('EMA50')}
- MA Summary: {indicators.get('MA_summary')} (–ü–æ–∫—É–ø–∫–∞: {indicators.get('MA_buy')}, –ü—Ä–æ–¥–∞–∂–∞: {indicators.get('MA_sell')})
- –°–≤–µ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã: {indicators.get('candles')}
- –¢—Ä–µ–Ω–¥: {indicators.get('trend')}
- –û–±—ä—ë–º: {indicators.get('volume')}
"""
    try:
        response = await asyncio.get_event_loop().run_in_executor(
            None,
            lambda: client.chat.completions.create(
                model="mistralai/Mixtral-8x7B-Instruct-v0.1",
                messages=[
                    {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏–∑—É. –ù–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –æ—Ü–µ–Ω–∏ —Ç–æ–ª—å–∫–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–õ–û–ù–ì –∏–ª–∏ –®–û–†–¢) –∏ –ø—Ä–æ—Ü–µ–Ω—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏. –ù–µ –¥–æ–±–∞–≤–ª—è–π –¥—Ä—É–≥–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π, —Ç–æ–ª—å–∫–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ü–µ–Ω—Ç. –ü–∏—à–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º."},
                    {"role": "user", "content": prompt.strip()}
                ],
                temperature=0.5,
                max_tokens=20
            )
        )
        content = response.choices[0].message.content
        return content.strip() if content else "‚Äî"
    except Exception as e:
        logging.exception(f"[TOGETHER AI] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏: {e}")
        return "‚Äî"


def build_full_forecast_prompt(symbol: str, indicators_15m: dict, indicators_1h: dict, indicators_4h: dict) -> str:
    return f"""
–¢—ã ‚Äî –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫. –ù–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –¥–ª—è {symbol} —Å–æ—Å—Ç–∞–≤—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ —à–∞–±–ª–æ–Ω—É:

1. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞ (15 –º–∏–Ω—É—Ç, 1 —á–∞—Å, 4 —á–∞—Å–∞):
   - –ö—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥ (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
   - –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–õ–û–ù–ì/–®–û–†–¢ –∏ %)
   - –û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã (RSI, MACD, Stoch RSI, EMA(9/20/50), MA Summary, –°–≤–µ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã, –¢—Ä–µ–Ω–¥)

2. –í –∫–æ–Ω—Ü–µ ‚Äî –æ–±—â–∏–π –≤—ã–≤–æ–¥ –ø–æ –≤—Å–µ–º —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É, —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç—å/—Å–∏–ª—É —Å–∏–≥–Ω–∞–ª–∞, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å).

–î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:

15 –º–∏–Ω—É—Ç:
- –ò—Ç–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª: {indicators_15m.get('final_signal')}
- Seven days: {indicators_15m.get('SevenDays')}
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {indicators_15m.get('recommendation')}
- RSI: {indicators_15m.get('RSI')}
- MACD: {indicators_15m.get('MACD')}
- Stoch RSI: {indicators_15m.get('StochRSI')}
- EMA(9): {indicators_15m.get('EMA9')}
- EMA(20): {indicators_15m.get('EMA20')}
- EMA(50): {indicators_15m.get('EMA50')}
- MA Summary: {indicators_15m.get('MA_summary')} (–ü–æ–∫—É–ø–∫–∞: {indicators_15m.get('MA_buy')}, –ü—Ä–æ–¥–∞–∂–∞: {indicators_15m.get('MA_sell')})
- –°–≤–µ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã: {indicators_15m.get('candles')}
- –¢—Ä–µ–Ω–¥: {indicators_15m.get('trend')}

1 —á–∞—Å:
- –ò—Ç–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª: {indicators_1h.get('final_signal')}
- Seven days: {indicators_1h.get('SevenDays')}
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {indicators_1h.get('recommendation')}
- RSI: {indicators_1h.get('RSI')}
- MACD: {indicators_1h.get('MACD')}
- Stoch RSI: {indicators_1h.get('StochRSI')}
- EMA(9): {indicators_1h.get('EMA9')}
- EMA(20): {indicators_1h.get('EMA20')}
- EMA(50): {indicators_1h.get('EMA50')}
- MA Summary: {indicators_1h.get('MA_summary')} (–ü–æ–∫—É–ø–∫–∞: {indicators_1h.get('MA_buy')}, –ü—Ä–æ–¥–∞–∂–∞: {indicators_1h.get('MA_sell')})
- –°–≤–µ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã: {indicators_1h.get('candles')}
- –¢—Ä–µ–Ω–¥: {indicators_1h.get('trend')}

4 —á–∞—Å–∞:
- –ò—Ç–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª: {indicators_4h.get('final_signal')}
- Seven days: {indicators_4h.get('SevenDays')}
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {indicators_4h.get('recommendation')}
- RSI: {indicators_4h.get('RSI')}
- MACD: {indicators_4h.get('MACD')}
- Stoch RSI: {indicators_4h.get('StochRSI')}
- EMA(9): {indicators_4h.get('EMA9')}
- EMA(20): {indicators_4h.get('EMA20')}
- EMA(50): {indicators_4h.get('EMA50')}
- MA Summary: {indicators_4h.get('MA_summary')} (–ü–æ–∫—É–ø–∫–∞: {indicators_4h.get('MA_buy')}, –ü—Ä–æ–¥–∞–∂–∞: {indicators_4h.get('MA_sell')})
- –°–≤–µ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã: {indicators_4h.get('candles')}
- –¢—Ä–µ–Ω–¥: {indicators_4h.get('trend')}
"""

async def generate_full_forecast(symbol: str, indicators_15m: dict, indicators_1h: dict, indicators_4h: dict) -> str:
    prompt = build_full_forecast_prompt(symbol, indicators_15m, indicators_1h, indicators_4h)
    try:
        response = await asyncio.get_event_loop().run_in_executor(
            None,
            lambda: client.chat.completions.create(
                model="mistralai/Mixtral-8x7B-Instruct-v0.1",
                messages=[
                    {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏–∑—É. –°—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É–π —à–∞–±–ª–æ–Ω—É. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞ –¥–∞–π –∫—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥, –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã. –í –∫–æ–Ω—Ü–µ ‚Äî –æ–±—â–∏–π –≤—ã–≤–æ–¥. –ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –Ω–µ –≤—Å—Ç–∞–≤–ª—è–π –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã."},
                    {"role": "user", "content": prompt.strip()}
                ],
                temperature=0.5,
                max_tokens=900
            )
        )
        content = response.choices[0].message.content
        return content.strip() if content else "‚ö†Ô∏è –û—Ç–≤–µ—Ç –æ—Ç –ò–ò –ø—É—Å—Ç–æ–π."
    except Exception as e:
        logging.exception(f"[TOGETHER AI] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞: {e}")
        return f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –æ—Ç –ò–ò (Together AI): {str(e)}"
